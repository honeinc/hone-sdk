{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","iframehelper.js","node_modules/browser-event-bus/index.js","node_modules/eventemitter2/lib/eventemitter2.js","node_modules/extend/index.js","src/iframesizer.js"],"names":["e","exports","module","define","amd","f","window","global","self","HoneIFrameHelper","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_hreqif","this","eventBus","EventBus","namespace","_iframeSizer","IFrameSizer","honeIFrameHelper","BrowserEventBus","options","EventEmitter","_options","extend","target","origin","addEventListener","_onMessage","bind","EventEmitter2","supported","prototype","Object","create","_emit","emit","args","Array","slice","arguments","event","JSON","stringify","targets","frames","win","parent","push","forEach","postMessage","data","indexOf","json","msg","parse","ex","isArray","apply","undefined","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","searchListenerTree","handlers","type","tree","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","listeners","typeLength","currentType","nextType","_listeners","hasOwnProperty","concat","**","growListenerTree","listener","split","name","shift","warned","m","defaultMaxListeners","console","error","trace","obj","toString","setMaxListeners","once","fn","many","ttl","off","_origin","on","_all","handler","ns","onAny","addListener","leafs","iLeaf","position","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","hasOwn","toStr","arr","isPlainObject","has_own_constructor","has_is_property_of_method","constructor","key","src","copy","copyIsArray","clone","deep","onRendered","postMessageEvent","iframes","document","querySelectorAll","iframe","contentWindow","source","resizeDimensions","dataset","resize","dimension","toLowerCase","true","width","style","scrollWidth","height","scrollHeight"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar EventBus = require(2);\n\nvar IFrameSizer = require(5);\n\nmodule.exports = HoneIFrameHelper;\n\nfunction HoneIFrameHelper() {\n    var self = this;\n\n    self.eventBus = new EventBus( {\n        namespace: 'Hone'\n    } );\n\n    self._iframeSizer = new IFrameSizer( self.eventBus );\n\n    return self;\n}\n\nif ( !( 'honeIFrameHelper' in window ) ) {\n    window.honeIFrameHelper = new HoneIFrameHelper();\n}","'use strict';\n\nvar EventEmitter = require(3).EventEmitter2;\nvar extend = require(4);\n\nmodule.exports = BrowserEventBus;\n\nfunction BrowserEventBus( options ) {\n    var self = this;\n    EventEmitter.call( self );\n    \n    self._options = extend( {\n        namespace: '',\n        target: '*',\n        origin: '*'\n    }, options );\n    \n    window.addEventListener( 'message', self._onMessage.bind( self ), false );\n}\n\nBrowserEventBus.supported = ( 'postMessage' in window ) && ( 'bind' in function(){} ) && ( 'JSON' in window );\n\nBrowserEventBus.prototype = Object.create( EventEmitter.prototype, {} );\n\nBrowserEventBus.prototype._emit = BrowserEventBus.prototype.emit;\n\nBrowserEventBus.prototype.emit = function() {\n    var self = this;\n    \n    var args = Array.prototype.slice.call( arguments, 0 );\n    var event = ( self._options.namespace ? self._options.namespace + ':' : '' ) + JSON.stringify( args );\n\n    // get all our contained frames\n    var targets = Array.prototype.slice.call( window.frames, 0 );\n    \n    // walk up any iframe tree\n    var win = ( window === window.parent ) ? null : window.parent;\n    while( win ) {\n        targets.push( win );\n        win = ( win === win.parent ) ? null : win.parent;\n    }\n\n    targets.forEach( function( target ) {\n        if ( target !== window ) {\n            target.postMessage( event, self._options.target );\n        }\n    } );\n};\n\nBrowserEventBus.prototype._onMessage = function( event ) {\n    var self = this;\n    \n    if ( self._options.namespace && event.data.indexOf( self._options.namespace ) !== 0 ) {\n        return;\n    }\n\n    if ( self._options.origin !== '*' && event.origin !== self._options.origin ) {\n        return;\n    }\n    \n    var json = event.data.slice( self._options.namespace ? self._options.namespace.length + 1 : 0 );\n    var msg = null;\n    \n    try {\n        msg = JSON.parse( json );\n    }\n    catch( ex ) {\n        msg = null;\n        self._emit( 'error', 'browser-event-bus: ' + ex );\n        return;\n    }\n    \n    if ( !Array.isArray( msg ) ) {\n        self._emit( 'error', new Error( 'browser-event-bus: Did not get an array from event: ' + event.data ) );\n        return;\n    }\n\n    msg.push( event );\n    \n    self._emit.apply( self, msg );\n};","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    configure.call(this, conf);\n  }\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n          }\n        }\n        return listeners;\n      } else if(currentType === '**') {\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n        if(endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if(branch === '*' || branch === '**') {\n              if(tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if(branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n    }\n\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i+1);\n    }\n\n    xxTree = tree['**'];\n    if(xxTree) {\n      if(i < typeLength) {\n        if(xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for(branch in xxTree) {\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if(branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\n            } else if(branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n            }\n          }\n        }\n      } else if(xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for(var i = 0, len = type.length; i+1 < len; i++) {\n      if(type[i] === '**' && type[i+1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name) {\n\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        }\n        else if(typeof tree._listeners === 'function') {\n          tree._listeners = [tree._listeners, listener];\n        }\n        else if (isArray(tree._listeners)) {\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned) {\n\n            var m = defaultMaxListeners;\n\n            if (typeof this._events.maxListeners !== 'undefined') {\n              m = this._events.maxListeners;\n            }\n\n            if (m > 0 && tree._listeners.length > m) {\n\n              tree._listeners.warned = true;\n              console.error('(node) warning: possible EventEmitter memory ' +\n                            'leak detected. %d listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit.',\n                            tree._listeners.length);\n              console.trace();\n            }\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    this._events || init.call(this);\n    this._events.maxListeners = n;\n    if (!this._conf) this._conf = {};\n    this._conf.maxListeners = n;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn) {\n    this.many(event, 1, fn);\n    return this;\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this.on(event, listener);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function() {\n\n    this._events || init.call(this);\n\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) { return false; }\n    }\n\n    // Loop through the *_all* functions and invoke them.\n    if (this._all) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        this._all[i].apply(this, args);\n      }\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error') {\n\n      if (!this._all &&\n        !this._events.error &&\n        !(this.wildcard && this.listenerTree.error)) {\n\n        if (arguments[1] instanceof Error) {\n          throw arguments[1]; // Unhandled 'error' event\n        } else {\n          throw new Error(\"Uncaught, unspecified 'error' event.\");\n        }\n        return false;\n      }\n    }\n\n    var handler;\n\n    if(this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    }\n    else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      if (arguments.length === 1) {\n        handler.call(this);\n      }\n      else if (arguments.length > 1)\n        switch (arguments.length) {\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          // slower\n          default:\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            handler.apply(this, args);\n        }\n      return true;\n    }\n    else if (handler) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n      var listeners = handler.slice();\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        this.event = type;\n        listeners[i].apply(this, args);\n      }\n      return (listeners.length > 0) || !!this._all;\n    }\n    else {\n      return !!this._all;\n    }\n\n  };\n\n  EventEmitter.prototype.on = function(type, listener) {\n\n    if (typeof type === 'function') {\n      this.onAny(type);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    this.emit('newListener', type, listener);\n\n    if(this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    }\n    else if(typeof this._events[type] === 'function') {\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n    }\n    else if (isArray(this._events[type])) {\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n\n      // Check for listener leak\n      if (!this._events[type].warned) {\n\n        var m = defaultMaxListeners;\n\n        if (typeof this._events.maxListeners !== 'undefined') {\n          m = this._events.maxListeners;\n        }\n\n        if (m > 0 && this._events[type].length > m) {\n\n          this._events[type].warned = true;\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n          console.trace();\n        }\n      }\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if(!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    this._all.push(fn);\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    }\n    else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    }\n    else {\n      if (!this._events[type]) return this;\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    if(this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    exports.EventEmitter2 = EventEmitter;\n  }\n  else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();\n","var hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar undefined;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\t'use strict';\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {}\n\n\treturn key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\t'use strict';\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target === copy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","'use strict';\n\nvar EventEmitter = require(3).EventEmitter2;\n\nmodule.exports = IFrameSizer;\n\nfunction IFrameSizer( eventBus ) {\n    var self = this;\n    EventEmitter.call( self );\n\n    self.eventBus = eventBus;\n    self.eventBus.on( 'rendered', self.onRendered.bind( self ) );\n}\n\nIFrameSizer.prototype = Object.create( EventEmitter.prototype, {} );\n\nIFrameSizer.prototype.onRendered = function( event, postMessageEvent ) {\n    var iframes = Array.prototype.slice.call( document.querySelectorAll( 'iframe[data-resize]' ), 0 );\n    iframes.forEach( function( iframe ) {\n        if ( iframe.contentWindow === postMessageEvent.source ) {\n            var resizeDimensions = {};\n            iframe.dataset.resize.split( ',' ).forEach( function( dimension ) {\n                resizeDimensions[ dimension.toLowerCase() ] = true;\n            } );\n            \n            if ( resizeDimensions.true || resizeDimensions.width ) {\n                iframe.style.width = event.scrollWidth + 'px';\n            }\n\n            if ( resizeDimensions.true || resizeDimensions.height ) {\n                iframe.style.height = event.scrollHeight + 'px';\n            }\n        }\n    } );\n};"]}